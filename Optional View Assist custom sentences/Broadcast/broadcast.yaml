alias: View Assist - Broadcast
description: "Say broadcast and the message and VA will send to all devices not in do not disturb mode (v1.0.0)"
trigger:
  - platform: conversation
    command:
      - (announce | broadcast | tell everyone) {message}
condition: []
action:
  - variables:
      target_satellite_device: |-
        {% for sat in expand('group.viewassist_satellites') %}
          {% if (device_id(sat.attributes.mic_device)  == trigger.device_id) or (device_id(sat.attributes.display_device)  == trigger.device_id) %}
            {{ sat.entity_id }}
          {% endif %}
        {% endfor %}
      target_display_device: "{{ device_id(state_attr(target_satellite_device, 'display_device')) }}"
      target_mediaplayer_device: "{{ state_attr(target_satellite_device, 'mediaplayer_device') }}"
      target_satellite_device_type: "{{ state_attr(target_satellite_device, 'type') }}"
      view_path: /dashboard-viewassist/info
      group_entity: group.viewassist_satellites
      chime_path: www/viewassist/broadcast.mp3
    enabled: true
  - set_conversation_response: ""
  - repeat:
      sequence:
        - parallel:
            - if:
                - condition: template
                  value_template: >-
                    {{ ('view' in state_attr(repeat.item, 'type')) and
                    state_attr(repeat.item, 'mode') != 'hold' }}
              then:
                - service: python_script.set_state
                  data:
                    title: Announcement
                    entity_id: "{{ repeat.item }}"
                    message_font_size: 4vw
                    message: "{{trigger.slots.message | capitalize}}"
                - service: browser_mod.navigate
                  metadata: {}
                  data:
                    path: "{{ view_path }}"
                  target:
                    device_id: "{{ device_id(state_attr(repeat.item, 'display_device')) }}"
      for_each: "{{ state_attr(group_entity, 'entity_id')| list }}"
  - service: chime_tts.say
    target:
      entity_id: >-
        {%- set ns = namespace(targets=[]) -%} {%- for satellite in
        expand(group_entity) -%}
          {%- if state_attr(satellite.entity_id,"do_not_disturb") == "False" -%}
            {%- set ns.targets = ns.targets + [state_attr(satellite.entity_id,"mediaplayer_device")] -%}
          {%- endif -%}
        {%- endfor -%} {{ns.targets}}
    data:
      chime_path: "{{ chime_path }}"
      tts_playback_speed: 100
      message: "{{ trigger.slots.message }}"
      tts_platform: google_translate
    enabled: true
mode: single
