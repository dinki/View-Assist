blueprint:
  name: View Assist - Ask AI
  description: Ask a general knowledge question or other request to AI (View Assist askai v 1.0.0)
  domain: automation
  input:
    command:
      name: Command
      description: The phrase you want to use to trigger querying AI
      default: "Ask (AI | Rosie) {question}"
    agent:
      name: Conversation Agent
      description: The Conversation Agent you created to connect to AI (example conversation.chatgpt)
      selector:
        conversation_agent:
      default: ""      
    view:
      name: View
      description: The View Assist dashboard view to use for text information display
      default: "/dashboard-viewassist/info"
    group_entity: 
      name: Group Entity
      description: The group entity that holds the list of ViewAssist devices
      selector:
        entity:
          filter:
            - domain: group
      default: "group.viewassist_satellites" 
trigger:
  - platform: conversation
    command:
      - !input command
condition: []
action:
  - variables:
      group_entity: !input group_entity
      view: !input view
      agent: !input agent
      target_satellite_device: |-
        {% for sat in expand(group_entity) %}
          {% if device_id(sat.attributes.mic_device)  == trigger.device_id %}
            {{ sat.entity_id }}
          {% endif %}
        {% endfor %}
      target_display_device: "{{ device_id(state_attr(target_satellite_device, 'display_device')) }}"
      target_mediaplayer_device: "{{ state_attr(target_satellite_device, 'mediaplayer_device') }}"
      target_satellite_device_type: "{{ state_attr(target_satellite_device, 'type') }}"
  - service: conversation.process
    metadata: {}
    data:
      agent_id: "{{ agent }}"
      text: >-
        keep your answer to two or three sentences.  provide your answer as a
        python dictionary.  return only the dictionary and no other data.  Do
        not include back ticks or the word python.  The dictionary should
        include my original question with key of question and your answer with
        the key answer. Dates should be formatted as month day year when
        applicable and all times should be in 12 hour format and should be
        accurate to the minute. My question is:  {{ trigger.slots.question }} 
    response_variable: ai_answer
  - set_conversation_response: "{{ (ai_answer.response.speech.plain.speech | from_json)['answer'] }} "
  - service: python_script.set_state
    data:
      entity_id: "{{ target_satellite_device }}"
      title: Ask AI
      message_font_size: 4vw
      message: >-
        <b>Question</b>: <br /\> {{ (ai_answer.response.speech.plain.speech |
        from_json)['question'] |capitalize}}?<br /\><br /\> <b>Answer:</b> <br
        /\> {{ (ai_answer.response.speech.plain.speech | from_json)['answer'] }}
  - if:
      - condition: template
        value_template: "{{ target_satellite_device_type != 'audio_only' }}"
    then:
      - service: browser_mod.navigate
        data:
          path: "{{ view }}"
        target:
          device_id: "{{target_display_device}}"
mode: single
