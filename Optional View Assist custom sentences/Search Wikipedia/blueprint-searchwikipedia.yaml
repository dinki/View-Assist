# View Assist - View Assist Search Wikipedia (v 1.0.0)
# Special thanks to Scratt for his work on this blueprint
blueprint:
  name: View Assist - Search Wikipedia
  description: Search for a search term using Wikipedia (View Assist wikisearch v 1.0.0)
  domain: automation
  input:
    command:
      name: Command
      description: The phrase you want to use to trigger searching Wikipedia
      default: "(Tell me about [the] {searchterm}| search [for] {searchterm})"
    dashboard_infopic:
      name: Dashboard Infopic
      description: The View Assist dashboard view to use for info and pic
      default: "/dashboard-viewassist/infopic"
    dashboard_info:
      name: Dashboard Info Only
      description: The View Assist dashboard view to use for info only
      default: "/dashboard-viewassist/info"
    group_entity: 
      name: Group Entity
      description: The group entity that holds the list of ViewAssist devices
      selector:
        entity:
          filter:
            - domain: group
      default: "group.viewassist_satellites"   
alias: View Assist - Search Wikipedia
description: Search for a search term using Wikipedia (View Assist wikisearch v 1.0.0)
trigger:
  - platform: conversation
    command:
      - !input command
variables:
  group_entity: !input group_entity
condition: []
action:
  - variables:
      target_satellite_device: |-
        {% for sat in expand(group_entity) %}
          {% if device_id(sat.attributes.mic_device)  == trigger.device_id %}
            {{ sat.entity_id }}
          {% endif %}
        {% endfor %}
      target_display_device: "{{ device_id(state_attr(target_satellite_device, 'display_device')) }}"
      target_mediaplayer_device: "{{ state_attr(target_satellite_device, 'mediaplayer_device') }}"
      target_satellite_device_type: "{{ state_attr(target_satellite_device, 'type') }}"
    enabled: true
  - service: pyscript.search_wikipedia
    response_variable: wiki_response
    data:
      searchterm: "{{ trigger.slots.searchterm }}"
  - service: python_script.set_state
    data:
      entity_id: "{{ target_satellite_device }}"
      title: Wikipedia Search
      message_font_size: 3vw
  - choose:
    - conditions:
      - condition: template
        value_template: >-
          {% if wiki_response['thumbnail'] != None %}true{%
          else %}false{% endif %}
      sequence:
        - service: python_script.set_state
          data:
            entity_id: "{{ target_satellite_device }}"
            message: "{{ wiki_response['extract'] }}"
            image: "{{ wiki_response['thumbnail'] }}"
        - set_conversation_response: "{{ wiki_response['extract'] }}"
          enabled: true
        - service: browser_mod.navigate
          data:
            path: !input dashboard_infopic
          target:
            device_id: "{{target_display_device}}" 
    - conditions:
      - condition: template
        value_template: >-
          {% if wiki_response['type'] != 'disambiguation' %}true{%
          else %}false{% endif %}      
      sequence:
        - service: python_script.set_state
          data:
            entity_id: "{{ target_satellite_device }}"
            message: "{{ wiki_response['extract'] }}"
        - set_conversation_response: "{{ wiki_response['extract'] }}"
          enabled: true
        - if:
          - condition: template
            value_template: >-
              {{ ('view' in state_attr(repeat.item, 'type')) }}
          then:        
            - service: browser_mod.navigate
              data:
                path: !input dashboard_info
              target:
                device_id: "{{target_display_device}}"
    default:
      - set_conversation_response: Sorry, I couldn't find anything on Wikipedia for that
        enabled: true
mode: single
