blueprint:
  name: View Assist - Conversions
  description: Convert from one unit of measurement to another (View Assist Community Contributions - Conversions v 1.0.0)
  domain: automation
  input:
    view:
      name: View
      description: The View Assist dashboard view to use for text information display
      default: "/dashboard-viewassist/info"
    group_entity:
      name: Group Entity
      description: The group entity that holds the list of ViewAssist devices
      selector:
        entity:
          filter:
            - domain: group
      default: "group.viewassist_satellites"
trigger:
  - platform: conversation
    command:
      - "convert {source} to {target_unit}"
      - "how many {target_unit} are in {source}"
condition: []
action:
  - variables:
      group_entity: !input group_entity
      view: !input view
      target_satellite_device: |-
        {% for sat in expand(group_entity) %}
          {% if device_id(sat.attributes.mic_device)  == trigger.device_id %}
            {{ sat.entity_id }}
          {% endif %}
        {% endfor %}
      target_display_device: "{{ device_id(state_attr(target_satellite_device, 'display_device')) }}"
      target_mediaplayer_device: "{{ state_attr(target_satellite_device, 'mediaplayer_device') }}"
      target_satellite_device_type: "{{ state_attr(target_satellite_device, 'type') }}"
  - service: pyscript.viewassist_wolfram_short_answer
    data:
      query: "{{ trigger.sentence }}"
    response_variable: wolfram_answer
  - set_conversation_response: "{{ wolfram_answer.response }} is equivalent to {{ trigger.slots.source }}."
  - service: python_script.set_state
    data:
      entity_id: "{{ target_satellite_device }}"
      title: Conversion
      message_font_size: 4vw
      message: >-
        <b>Request</b>: <br /\> {{ trigger.sentence | capitalize}}<br /\><br /\> <b>Answer:</b> <br
        /\> {{ wolfram_answer.response }} is equivalent to {{ trigger.slots.source }}.
  - if:
      - condition: template
        value_template: "{{ target_satellite_device_type != 'audio_only' }}"
    then:
      - service: browser_mod.navigate
        data:
          path: "{{ view }}"
        target:
          device_id: "{{target_display_device}}"
mode: single
