# To do:
# Fix time remaining for translation of '2 hours' to 'two hours' or some sort of correlation for matching
# When asking to list timers show countdown if only one exists
blueprint:
  name: View Assist - Alarms Reminders Timers
  description: Ask Assist to set an alarm, reminder, or timer  (View Assist alarmsreminderstimers v 1.0.1)
  domain: automation
  input:
    alarmsound_path:
      name: Alarm Sound Path
      description: The path to the sound file that will sound repeatedly when the timer expires
      default: "http://192.168.0.25:8123/local/viewassist/alarm1.mp3"
    snooze_time:
      name: Snooze Time
      description: The amount of time in minutes to wait after hitting snooze button before sounding alarm again
      default: "10"
    use_24hr:
      name: Use 24 hour time
      description: Set this to true for 24 hour time and false for am/pm display of time for notifications
      default: false
      selector:
        boolean:
    view:
      name: View
      description: The View Assist dashboard view to use for displaying the notification and buttons to dismiss/snooze
      default: "/view-assist/alarm"
    info:
      name: Info
      description: The View Assist dashboard view to use for displaying information about timers
      default: "/view-assist/info"
trigger:
  - platform: conversation
    command:
      - set [a] timer for {when}
      - set [a] {when} timer
      - (set|start) [a|an] {name} timer for {when}
    id: timer
  - platform: conversation
    command:
      - (remind me | set a reminder) to {reminder} at {time}
    id: setalarm
  - platform: conversation
    command:
      - Set [an] alarm for {when}
      - >-
        remind me to {name} in {when} | set a reminder to {name} in
        {when} | remind me in {when} to {name}
    id: alarm
  - platform: conversation
    command:
      - (Turn off | cancel | stop | snooze) alarm
    id: turnoffalarm
  - event_type: va_timer_warning
    id: timerwarning
    trigger: event
    alias: When viewassist event warning expired fires
  - event_type: va_timer_expired
    id: ringalarm
    trigger: event
    alias: When viewassist event timer expired fires
  - platform: conversation
    command:
      - how much time (is) left on my {name} timer
    id: timeremaining
  - platform: conversation
    command:
      - cancel my {name} timer
    id: canceltimer
  - platform: conversation
    command:
      - list my timers
    id: listtimer
  - alias: When SNOOZE button pressed
    event_type: viewassist
    trigger: event
    id: snoozealarm
    enabled: true
    event_data:
      command: snooze alarm
  - alias: When DISMISS button pressed
    event_type: viewassist
    trigger: event
    id: turnoffalarm
    enabled: true
    event_data:
      command: dismiss alarm
condition: []
action:
  - variables:
      target_satellite_device: "{{ view_assist_entity(trigger.device_id) if trigger.platform == 'conversation' else trigger.event.data.entity_id }}"
      target_musicplayer_device: "{{ state_attr(target_satellite_device, 'musicplayer_device')}}"
      target_mediaplayer_device: "{{ state_attr(target_satellite_device, 'mediaplayer_device')}}"
      target_satellite_device_type: "{{ state_attr(target_satellite_device, 'type')}}"
      alarmsound_path: !input alarmsound_path
      view: !input view
      info: !input info
      snooze_time_input: !input snooze_time
      snooze_time: "{{ snooze_time_input | int }}"
      use_24hr: !input use_24hr
  - choose:
      - conditions:
          - condition: trigger
            id:
              - timer
              - alarm
        sequence:
          - variables:
              device_id: "{{ trigger.device_id }}"
              type: "{{ trigger.id }}"
              time: "{{ trigger.slots.when }}"
              name: "{{ trigger.slots.name }}"
          - action: view_assist.set_timer
            metadata: {}
            data:
              device_id: "{{ device_id }}"
              type: "{{ type }}"
              time: "{{ time }}"
              name: "{{ name }}"
            response_variable: timer_result
          - set_conversation_response: >-
              {{ name }} {{ type }} set for {{ time }}
          - if:
            - condition: template
              value_template: "{% if target_satellite_device_type != 'audio_only' %}true{% else %}false{% endif %}"
            then:
              - action: view_assist.set_state
                target:
                  entity_id: '{{ target_satellite_device }}'
                data:
                  display_timer_expire: "{{ timer_result.timer.expires }}"
                  display_timer_name: "{{ timer_result.timer.name | capitalize }}"
                  display_timer_type: "{{ type }}"
              - action: view_assist.navigate
                data:
                  device: "{{ target_satellite_device }}"
                  path: "{{ view }}"
      - conditions:
          - condition: trigger
            id:
              - timerwarning
              - ringalarm
        sequence:
          - variables:
              alarm_type: "{{ trigger.event.data.timer_class }}"
              alarm_name: |-
                {% if trigger.event.data.name is defined %}
                  {{ trigger.event.data.name }}
                {% endif %}
              alarm_id: "{{ trigger.event.data.timer_id }}"
              alarm_time: "{{ trigger.event.data.expires}}"
          - action: view_assist.set_state
            target:
              entity_id: '{{ target_satellite_device }}'
            data:
              mode: hold
              display_timer_name: "{{ alarm_name | capitalize }}"
              display_timer_expire: "{{ alarm_time }}"
              display_timer_type: "{{ alarm_type }}"
              display_timer_id: "{{ alarm_id }}"
          - action: view_assist.navigate
            data:
              device: "{{ target_satellite_device }}"
              path: "{{ view }}"
          - if:
            - condition: template
              value_template: "{% if trigger.id == 'ringalarm' %}true{% else %}false{% endif %}"
            then:
              - action: view_assist.sound_alarm
                data:
                  entity_id: "{{ target_mediaplayer_device }}"
                  media_file: "{{ alarmsound_path }}"
      - conditions:
          - condition: trigger
            id:
              - turnoffalarm
        sequence:
          - variables:
              display_timer_id: "{{ state_attr(target_satellite_device, 'display_timer_id') }}"
          - action: view_assist.set_state
            target:
              entity_id: '{{ target_satellite_device }}'
            data:
              mode: normal
          - action: view_assist.cancel_sound_alarm
            data:
              entity_id: "{{ target_mediaplayer_device }}"
          - action: view_assist.cancel_timer
            data:
              timer_id: "{{ display_timer_id }}"
          - set_conversation_response: ""
      - conditions:
          - condition: trigger
            id:
              - timeremaining
        sequence:
          - action: view_assist.get_timers
            data:
              device_id: "{{ trigger.device_id }}"
            response_variable: timer_info
          - variables:
              device_id: "{{ trigger.device_id }}"
              target_satellite_device: "{{ view_assist_entity(trigger.device_id) }}"
              target_satellite_device_type: "{{ state_attr(target_satellite_device, 'type')}}"
              timer_id: >-
                {% set timers = timer_info['result'] %}
                {% set search_name = trigger.slots.name %}
                {% for timer in timers %}
                  {% if search_name in timer.name or search_name in timer.extra_info.sentence %}
                    {{ timer.id }}
                  {% endif %}
                {% endfor %}
              timer: >-
                {% set timers = timer_info['result'] %}
                {% set search_name = timer_id %}
                {% set found_timer = {} %}
                {% for timer in timers %}
                  {% if search_name in timer.id %}
                    {% set found_timer = timer %}
                    {{ found_timer | list }}
                  {% endif %}
                {% endfor %}
              timer_name: "{% set timer_result = timer_info['result'] | selectattr('id', '==', timer_id) | list %}{% if timer_result %}{{ timer_result[0].name | capitalize }}{% else %}{% endif %}"              
              time_left: "{% set timer_result = timer_info['result'] | selectattr('id', '==', timer_id) | list %}{% if timer_result %}{{ timer_result[0].expiry.text }}{% else %}{% endif %}"
              time_expires: "{% set timer_result = timer_info['result'] | selectattr('id', '==', timer_id) | list %}{% if timer_result %}{{ timer_result[0].expires }}{% else %}{% endif %}"
          - if:
              - condition: template
                value_template: >-
                  {% if timer_id != '' %}true{% endif %}
            then:
            - set_conversation_response: >-
                You have {{ time_left }} on your {{ trigger.slots.name }} timer
            - if:
              - condition: template
                value_template: "{% if target_satellite_device_type != 'audio_only' %}true{% else %}false{% endif %}"
              then:
                - action: view_assist.set_state
                  target:
                    entity_id: '{{ target_satellite_device }}'
                  data:
                    display_timer_expire: "{{ time_expires }}"
                    display_timer_name: "{{ timer_name }}"
                - action: view_assist.navigate
                  data:
                    device: "{{ target_satellite_device }}"
                    path: "{{ view }}"
            else:
            - set_conversation_response: No timer called {{ trigger.slots.name }} could be found
            - if:
              - condition: template
                value_template: "{% if target_satellite_device_type != 'audio_only' %}true{% else %}false{% endif %}"
              then:
              - variables:
                  message: "No timer called '{{ trigger.slots.name | capitalize }}' could be found"
              - action: view_assist.set_state
                target:
                  entity_id: '{{ target_satellite_device }}'
                data:
                  message: "{{ message }}"
                  message_font_size: 3vw 
              - action: view_assist.navigate
                data:
                  device: "{{ target_satellite_device }}"
                  path: "{{ info }}"
              - action: view_assist.set_state
                target:
                  entity_id: '{{ target_satellite_device }}'
                data:
                  title: "Timers"
      - conditions:
          - condition: trigger
            id:
              - canceltimer
        sequence:
          - action: view_assist.get_timers
            data:
              device_id: "{{ trigger.device_id }}"
            response_variable: timer_info
          - variables:
              device_id: "{{ trigger.device_id }}"
              target_satellite_device: "{{ view_assist_entity(trigger.device_id) }}"
              target_satellite_device_type: "{{ state_attr(target_satellite_device, 'type')}}"
              timer_id: >-
                {% set timers = timer_info['result'] %}
                {% set search_name = trigger.slots.name %}
                {% for timer in timers %}
                  {% if search_name in timer.name or search_name in timer.extra_info.sentence %}
                    {{ timer.id }}
                  {% endif %}
                {% endfor %}
          - if:
              - condition: template
                value_template: >-
                  {% if timer_id != '' %}true{% endif %}
            then:
              - set_conversation_response: Your {{ trigger.slots.name }} timer has been canceled
              - action: view_assist.cancel_timer
                data:
                  timer_id: "{{ timer_id }}"
              - variables:
                  message: >-
                    Your {{ trigger.slots.name }} timer has been canceled
              - if:
                  - condition: template
                    value_template: "{% if target_satellite_device_type != 'audio_only' %}true{% else %}false{% endif %}"
                then:
                  - action: view_assist.set_state
                    target:
                      entity_id: '{{ target_satellite_device }}'
                    data:
                      message: "{{ message }}"
                      message_font_size: 3vw
                  - action: view_assist.navigate
                    data:
                      device: "{{ target_satellite_device }}"
                      path: "{{ info }}"
                  - action: view_assist.set_state
                    target:
                      entity_id: '{{ target_satellite_device }}'
                    data:
                      title: "Timers"
            else:
              - set_conversation_response: >-
                  I could not find an active timer called {{ trigger.slots.name }}
              - variables:
                  message: >-
                    I could not find an active timer called {{ trigger.slots.name }}
              - if:
                  - condition: template
                    value_template: "{% if target_satellite_device_type != 'audio_only' %}true{% else %}false{% endif %}"
                then:
                  - action: view_assist.set_state
                    target:
                      entity_id: '{{ target_satellite_device }}'
                    data:
                      message: "{{ message }}"
                      message_font_size: 3vw
                  - action: view_assist.navigate
                    data:
                      device: "{{ target_satellite_device }}"
                      path: "{{ info }}"
                  - action: view_assist.set_state
                    target:
                      entity_id: '{{ target_satellite_device }}'
                    data:
                      title: "Timers"
      - conditions:
          - condition: trigger
            id:
              - listtimer
        sequence:
          - variables:
              target_satellite_device: "{{ view_assist_entity(trigger.device_id) }}"
              target_satellite_device_type: "{{ state_attr(target_satellite_device, 'type')}}"
              device_id: "{{ trigger.device_id }}"
          - action: view_assist.get_timers
            data:
              device_id: "{{ device_id }}"
            response_variable: timer_info
          - variables:
              active_timers: "{{ timer_info['result'] | selectattr('status', '!=', 'expired') | list }}"
              count: "{{ active_timers | length }}"
          - set_conversation_response: >
              {% set active_timers = timer_info['result'] | selectattr('status', '!=', 'expired') | list %}
              {% set count = active_timers | length %}
              {% if count == 0 %}
              There are no active timers.
              {% else %}
              There {% if count == 1 %}is one active {{ active_timers[0]['timer_class'] }} called {% else %}are {{ count }} active timers{% endif %}:
              {% for timer in active_timers %}
                {{ timer['name'] if timer['name'] else timer['extra_info']['sentence'] }} {{ timer['timer_class'] }} with {{ timer['expiry']['text'] }} remaining,
              {% endfor %}
              {% endif %}
          - if:
            - condition: template
              value_template: "{% if target_satellite_device_type != 'audio_only' %}true{% else %}false{% endif %}"
            then:
            - variables:
                message: >-
                  {% set active_timers = timer_info['result'] | selectattr('status', '!=', 'expired') | list %}
                  {% set count = active_timers | length %}
                  {% if count == 0 %}
                  There are no active timers.
                  {% else %}
                  There {% if count == 1 %}is one active {{ active_timers[0]['timer_class'] }} called {% else %}are {{ count }} active timers{% endif %}:<br /\><br /\>
                  {% for timer in active_timers %}
                    {{ timer['name'] | capitalize if timer['name'] else timer['extra_info']['sentence'] | capitalize }} {{ timer['timer_class'] }} with {{ timer['expiry']['text'] }} remaining<br /\><br /\>
                  {% endfor %}
                  {% endif %}
            - action: view_assist.set_state
              target:
                entity_id: '{{ target_satellite_device }}'
              data:
                message: "{{ message }}"
                message_font_size: 3vw
            - action: view_assist.navigate
              data:
                device: "{{ target_satellite_device }}"
                path: "{{ info }}"
            - action: view_assist.set_state
              target:
                entity_id: '{{ target_satellite_device }}'
              data:
                title: "Timers"
      - conditions:
          - condition: trigger
            id:
              - snoozealarm
        sequence:
          - variables:
              new_time: "{{ snooze_time }} minutes"
              display_timer_id: "{{ state_attr(target_satellite_device, 'display_timer_id')}}"
          - action: view_assist.set_state
            target:
              entity_id: '{{ target_satellite_device }}'
            data:
              mode: normal
          - action: view_assist.cancel_sound_alarm
            data:
              entity_id: "{{ target_mediaplayer_device }}"
          - action: view_assist.snooze_timer
            data:
              timer_id: "{{ display_timer_id }}"
              time: "{{ new_time }}"
          - set_conversation_response: ""
mode: parallel

